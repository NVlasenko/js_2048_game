{"version":3,"sources":["scripts/main.js"],"names":["board","rows","columns","score","startButton","document","querySelector","gameField","loseMessage","winMessage","startMessage","setGame","innerText","innerHTML","classList","add","r","c","tile","createElement","id","toString","updateTile","appendChild","setTwo","hasEmptyTile","found","Math","floor","random","randomNum","getElementById","remove","hasMovesLeft","num","className","filterZero","row","filter","slide","filteredRow","i","length","push","slideLeft","slideRight","reverse","slideUp","slideDown","currentNum","leftNum","rightNum","upNum","downNum","window","onload","addEventListener","e","code"],"mappings":"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","file":"main.10ddc18a.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\n// write your code here\n\nlet board;\nconst rows = 4;\nconst columns = 4;\nlet score = 0;\nconst startButton = document.querySelector('button');\nconst gameField = document.querySelector('.game-field');\nconst loseMessage = document.querySelector('.message-lose');\nconst winMessage = document.querySelector('.message-win');\nconst startMessage = document.querySelector('.message-start');\n\nwindow.onload = function() {\n  startButton.addEventListener('click', function() {\n    setGame();\n    startMessage.classList.add('hidden');\n    startButton.innerHTML = 'Restart';\n  });\n};\n\nfunction setGame() {\n  board = [\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n  ];\n\n  score = 0;\n  document.querySelector('.game-score').innerText = score;\n  gameField.innerHTML = '';\n  loseMessage.classList.add('hidden');\n  winMessage.classList.add('hidden');\n\n  for (let r = 0; r < rows; r++) {\n    for (let c = 0; c < columns; c++) {\n      const tile = document.createElement('td');\n\n      tile.classList.add('field-cell');\n      tile.id = r.toString() + '-' + c.toString();\n\n      const num = board[r][c];\n\n      updateTile(tile, num);\n      gameField.appendChild(tile);\n    }\n  }\n  setTwo();\n  setTwo();\n}\n\nfunction hasEmptyTile() {\n  for (let r = 0; r < rows; r++) {\n    for (let c = 0; c < columns; c++) {\n      if (board[r][c] === 0) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n}\n\nfunction setTwo() {\n  if (!hasEmptyTile()) {\n    return;\n  }\n\n  let found = false;\n\n  while (!found) {\n    const r = Math.floor(Math.random() * rows);\n    const c = Math.floor(Math.random() * columns);\n\n    if (board[r][c] === 0) {\n      const randomNum = Math.random() < 0.9 ? 2 : 4;\n\n      board[r][c] = randomNum;\n\n      const tile = document.getElementById(r.toString() + '-' + c.toString());\n\n      tile.innerText = randomNum.toString();\n\n      if (randomNum === 2) {\n        tile.classList.add('field-cell--2');\n      } else {\n        tile.classList.add('field-cell--4');\n      }\n      found = true;\n\n      if (randomNum >= 2048) {\n        winMessage.classList.remove('hidden');\n      }\n\n      if (!hasEmptyTile() && !hasMovesLeft()) {\n        loseMessage.classList.remove('hidden');\n      }\n    }\n  }\n}\n\nfunction updateTile(tile, num) {\n  tile.innerText = '';\n  tile.className = 'field-cell';\n\n  if (num > 0 && num <= 2048) {\n    tile.innerText = num;\n    tile.classList.add('field-cell--' + num.toString());\n\n    if (num === 0) {\n      tile.classList.add('field-cell--empty');\n    } else {\n      tile.classList.remove('field-cell--empty');\n    }\n  }\n}\n\ndocument.addEventListener('keyup', (e) => {\n  if (e.code === 'ArrowLeft') {\n    slideLeft();\n    setTwo();\n  } else if (e.code === 'ArrowRight') {\n    slideRight();\n    setTwo();\n  } else if (e.code === 'ArrowUp') {\n    slideUp();\n    setTwo();\n  } else if (e.code === 'ArrowDown') {\n    slideDown();\n    setTwo();\n  }\n  document.querySelector('.game-score').innerText = score;\n});\n\nfunction filterZero(row) {\n  return row.filter(num => num !== 0);\n}\n\nfunction slide(row) {\n  let filteredRow = filterZero(row);\n\n  for (let i = 0; i < filteredRow.length - 1; i++) {\n    if (filteredRow[i] === filteredRow[i + 1]) {\n      filteredRow[i] *= 2;\n      filteredRow[i + 1] = 0;\n      score += filteredRow[i];\n    }\n  }\n\n  filteredRow = filterZero(filteredRow);\n\n  while (filteredRow.length < columns) {\n    filteredRow.push(0);\n  }\n\n  return filteredRow;\n}\n\nfunction slideLeft() {\n  for (let r = 0; r < rows; r++) {\n    let row = board[r];\n\n    row = slide(row);\n    board[r] = row;\n\n    for (let c = 0; c < columns; c++) {\n      const tile = document.getElementById(r.toString() + '-' + c.toString());\n      const num = board[r][c];\n\n      updateTile(tile, num);\n\n      if (!hasEmptyTile() && !hasMovesLeft()) {\n        loseMessage.classList.remove('hidden');\n      }\n\n      if (num >= 2048) {\n        winMessage.classList.remove('hidden');\n      }\n    }\n  }\n}\n\nfunction slideRight() {\n  for (let r = 0; r < rows; r++) {\n    let row = board[r];\n\n    row.reverse();\n    row = slide(row);\n    row.reverse();\n    board[r] = row;\n\n    for (let c = 0; c < columns; c++) {\n      const tile = document.getElementById(r.toString() + '-' + c.toString());\n      const num = board[r][c];\n\n      updateTile(tile, num);\n\n      if (!hasEmptyTile() && !hasMovesLeft()) {\n        loseMessage.classList.remove('hidden');\n      }\n\n      if (num >= 2048) {\n        winMessage.classList.remove('hidden');\n      }\n    }\n  }\n}\n\nfunction slideUp() {\n  for (let c = 0; c < columns; c++) {\n    let row = [board[0][c], board[1][c], board[2][c], board[3][c]];\n\n    row = slide(row);\n\n    for (let r = 0; r < rows; r++) {\n      board[r][c] = row[r];\n\n      const tile = document.getElementById(r.toString() + '-' + c.toString());\n      const num = board[r][c];\n\n      updateTile(tile, num);\n\n      if (!hasEmptyTile() && !hasMovesLeft()) {\n        loseMessage.classList.remove('hidden');\n      }\n\n      if (num >= 2048) {\n        winMessage.classList.remove('hidden');\n      }\n    }\n  }\n}\n\nfunction slideDown() {\n  for (let c = 0; c < columns; c++) {\n    let row = [board[0][c], board[1][c], board[2][c], board[3][c]];\n\n    row.reverse();\n    row = slide(row);\n    row.reverse();\n\n    for (let r = 0; r < rows; r++) {\n      board[r][c] = row[r];\n\n      const tile = document.getElementById(r.toString() + '-' + c.toString());\n      const num = board[r][c];\n\n      updateTile(tile, num);\n\n      if (!hasEmptyTile() && !hasMovesLeft()) {\n        loseMessage.classList.remove('hidden');\n      }\n\n      if (num >= 2048) {\n        winMessage.classList.remove('hidden');\n      }\n    }\n  }\n}\n\nfunction hasMovesLeft() {\n  for (let r = 0; r < rows; r++) {\n    for (let c = 0; c < columns; c++) {\n      const currentNum = board[r][c];\n      const leftNum = c > 0 ? board[r][c - 1] : null;\n      const rightNum = c < columns - 1 ? board[r][c + 1] : null;\n      const upNum = r > 0 ? board[r - 1][c] : null;\n      const downNum = r < rows - 1 ? board[r + 1][c] : null;\n\n      if (\n        currentNum === 0\n        || currentNum === leftNum\n        || currentNum === rightNum\n        || currentNum === upNum\n        || currentNum === downNum\n      ) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n}\n"]}